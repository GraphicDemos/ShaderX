///////////////////////////////////////////////////////////////////////////////////////////////////
//  Proj : ShaderX 3
//  File : sharedQuadVP.cg
//  Desc : shared vertex program, used for screen aligned quad rendering
///////////////////////////////////////////////////////////////////////////////////////////////////

// define inputs from application
struct VpIn
{
    float4 Position      : POSITION;
    float2 TexCoord0     : TEXCOORD0;        
};

// define outputs from vertex shader
struct VpOut
{
    float4 HPosition    : POSITION;    
    float4 TexCoord0    : TEXCOORD0;
    float4 TexCoord1    : TEXCOORD1;
    float4 TexCoord2    : TEXCOORD2;
    float4 TexCoord3    : TEXCOORD3;
};

VpOut main(VpIn IN, uniform float4x4 ModelViewProj, uniform float4 vOffset01, uniform float4 vOffset02)
{
    VpOut OUT;
    // transform vertex position into homogenous clip-space 
    OUT.HPosition = mul(ModelViewProj, IN.Position);     
    
    // output texture displaced texture coordinates
    OUT.TexCoord0.xy = IN.TexCoord0.xy+vOffset01.xy;               
    OUT.TexCoord1.xy = IN.TexCoord0.xy+vOffset01.zw;                   
    OUT.TexCoord2.xy = IN.TexCoord0.xy+vOffset02.xy;            
    OUT.TexCoord3.xy = IN.TexCoord0.xy+vOffset02.zw;
                   
    return OUT;
}