<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE RENDER_MONKEY [
   <!ELEMENT RENDER_MONKEY
   (
      RmEffectWorkspace |
      RmRegistryBranch |
      RmClipboardNode
   )?>

   <!ELEMENT RmEffectWorkspace 
   (
      RmRegistryBranch?,
      RmPlugInData?,
      RmStringVariable*,
      (
         ( RmDirectXEffect, RmOpenGLEffect? ) |
         ( RmOpenGLEffect, RmDirectXEffect? )
      )?,
      (
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmEffectGroup
      )*
   )>

   <!ELEMENT RmEffectGroup
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmDirectXEffect |
         RmOpenGLEffect |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData
      )*
   )>

   <!ELEMENT RmDirectXEffect
   ( 
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmPass
      )*
   )>

   <!ELEMENT RmOpenGLEffect
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmCamera |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRenderableTexture |
         RmStreamMap |
         RmModelData |
         RmGLPass
      )*
   )>

   <!ELEMENT RmPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         (
         ( RmHLSLShader | RmShader ),
         ( RmShader | RmHLSLShader )?
         )
      )?,
      RmRenderTarget*,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject
         )*
      )>
                                                                     
   <!ELEMENT RmGLPass
   ( 
      RmPlugInData?,
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLShader, RmGLShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>
      
   <!ELEMENT RmShader
   ( 
      RmShaderCode,
      RmPlugInData?,
      (
      RmStringVariable |
      RmShaderConstant
      )*
   )>

   <!ELEMENT RmHLSLShader
   ( 
      RmPlugInData?,
      RmShaderCode,
      (
      RmStringVariable |
      RmShaderConstant |
      RmSampler
      )*
   )>

   <!ELEMENT RmGLShader
   ( 
      RmPlugInData?,
      RmShaderCode,
      (
      RmStringVariable
      )*
   )>

   <!ELEMENT RmTextureObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmTextureReference?,
      RmState*
   )>

   <!ELEMENT RmLightObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmLightReference?
   )>
   
   <!ELEMENT RmMaterialObject
   (
      RmPlugInData?,
      RmStringVariable*,
      RmMaterialReference?
   )>
   
   <!ELEMENT RmRenderStateBlock
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmState 
      )*
   )>

   <!ELEMENT RmStreamMap
   (
      RmPlugInData?,
      (
         RmStringVariable |
         RmStream 
      )*
   )>

   <!ELEMENT RmStream               ( RmPlugInData?, RmStreamChannel* )>

   <!ELEMENT RmModelData            ( RmPlugInData?, RmStringVariable* )>  
   <!ELEMENT RmTextureReference     ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmLightReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmMaterialReference    ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmCameraReference      ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmModelReference       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmStreamMapReference   ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderableTexture    ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmRenderTarget         ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmBooleanVariable      ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmFloatVariable        ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmVectorVariable       ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmMatrixVariable       ( RmPlugInData?, RmStringVariable* )>   
   <!ELEMENT RmColorVariable        ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmIntegerVariable      ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT Rm2DTextureVariable    ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmCubemapVariable      ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT Rm3DTextureVariable    ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmLightVariable        ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmMaterialVariable     ( RmPlugInData?, RmStringVariable* )>
   <!ELEMENT RmCamera               ( RmPlugInData?, RmStringVariable* )>

   <!ELEMENT RmStringVariable       ( RmTextDataBlock, RmPlugInData? )>
   
   <!ELEMENT RmDynamicVariable
   (
      RmPlugInData?,
      RmStringVariable*,
      RmDynamicVariableValueContainer
   )>
   
   <!ELEMENT RmDynamicVariableValueContainer
   (
      RmPlugInData?,
      RmDynamicVariableValue*
   )>
   
   <!ELEMENT RmTextDataBlock        ( #PCDATA ) >
   
   <!ELEMENT RmRegistryBranch
   ( 
      RmTextDataBlock?,
      (
         RmRegistryBranch |
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable
      )*      
   )>

   <!ELEMENT RmPlugInData
   ( 
      RmTextDataBlock?,
      (
         RmStringVariable |
         RmIntegerVariable |
         RmBooleanVariable |
         RmFloatVariable
      )*      
   )>
   
   <!ELEMENT RmClipboardNode
   ( 
      RmTextDataBlock?,
      (
         RmEffectWorkspace | 
         RmEffectGroup |   
         RmDirectXEffect |                
         RmOpenGLEffect |                
         RmPass |                  
         RmGLPass |                  
         RmShader |        
         RmHLSLShader |        
         RmGLShader |        
         RmShaderConstant |
         RmSampler |               
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmRenderStateBlock |
         RmState |                 
         RmStreamMap |           
         RmStream |              
         RmStreamChannel |
         RmModelData |
         RmTextureReference |
         RmLightReference |
         RmMaterialReference |
         RmModelReference |
         RmStreamMapReference |
         RmRenderableTexture |
         RmRenderTarget |
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmDynamicVariableValue |
         RmColorVariable |
         RmIntegerVariable |
         RmStringVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmRegistryBranch |
         RmPlugInData |
         RmCamera |                
         RmCameraReference
      )*      
   )>
   
   <!ELEMENT RmStreamChannel        ( RmPlugInData? ) >
   <!ELEMENT RmShaderConstant       ( RmPlugInData? ) >
   <!ELEMENT RmSampler              ( RmPlugInData? ) >
   <!ELEMENT RmState                ( RmPlugInData? ) >
   <!ELEMENT RmDynamicVariableValue ( RmPlugInData? ) >
   
   <!ELEMENT RmShaderCode           ( #PCDATA ) >

   <!ATTLIST RmEffectWorkspace 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_EFFECT                 CDATA #REQUIRED
      VALIDATION_STRING             CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >                                 

   <!ATTLIST RmEffectGroup           
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmDirectXEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmOpenGLEffect                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 

   <!ATTLIST RmGLPass                  
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  CDATA #REQUIRED
   >                                 

   <!ATTLIST RmHLSLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
      TARGET                        CDATA #REQUIRED
      ENTRY_POINT                   CDATA #REQUIRED
   >  

   <!ATTLIST RmGLShader        
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  

   <!ATTLIST RmShaderConstant
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >                                 

   <!ATTLIST RmSampler               
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >

   <!ATTLIST RmTextureObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE_INDEX                   CDATA #REQUIRED
   >

   <!ATTLIST RmLightObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialObject
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmRenderStateBlock
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >                                 

   <!ATTLIST RmState                 
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STATE                         CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
   >                               

   <!ATTLIST RmStreamMap           
     NAME                           CDATA #REQUIRED
     API                            CDATA #REQUIRED
   >                               

   <!ATTLIST RmStream              
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      STRIDE                        CDATA #REQUIRED
   >

   <!ATTLIST RmStreamChannel
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      DATA_SIZE                     CDATA #REQUIRED
      DATA_TYPE                     CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
      USAGE_INDEX                   CDATA #REQUIRED
   >

   <!ATTLIST RmModelData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmTextureReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmLightReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >
   
   <!ATTLIST RmModelReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmStreamMapReference
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
   >

   <!ATTLIST RmRenderableTexture
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
      WIDTH                         CDATA #REQUIRED
      HEIGHT                        CDATA #REQUIRED
      FORMAT                        CDATA #REQUIRED
      USE_VIEWPORT_DIMENSIONS       ( TRUE | FALSE ) #REQUIRED
      GENERATE_MIPMAPS              ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmRenderTarget
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
      RENDER_TO_SCREEN              ( TRUE | FALSE ) #REQUIRED
      COLOR_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      DEPTH_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      CLEAR_COLOR_VALUE             CDATA #REQUIRED
      DEPTH_CLEAR_VALUE             CDATA #REQUIRED
   >
   
   <!ATTLIST RmBooleanVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >

   <!ATTLIST RmFloatVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmVectorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmMatrixVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      VALUE_4                       CDATA #REQUIRED
      VALUE_5                       CDATA #REQUIRED
      VALUE_6                       CDATA #REQUIRED
      VALUE_7                       CDATA #REQUIRED
      VALUE_8                       CDATA #REQUIRED
      VALUE_9                       CDATA #REQUIRED
      VALUE_10                      CDATA #REQUIRED
      VALUE_11                      CDATA #REQUIRED
      VALUE_12                      CDATA #REQUIRED
      VALUE_13                      CDATA #REQUIRED
      VALUE_14                      CDATA #REQUIRED
      VALUE_15                      CDATA #REQUIRED
   >

   <!ATTLIST RmDynamicVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VARIABLE_TYPE                 ( FLOAT | INTEGER | BOOLEAN ) #REQUIRED
      ROWS                          CDATA #REQUIRED
      COLUMNS                       CDATA #REQUIRED
      FIXED_SIZE                    ( TRUE | FALSE ) #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmDynamicVariableValue
      ROW_INDEX                     CDATA #REQUIRED
      COLUMN_INDEX                  CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmColorVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
   >

   <!ATTLIST RmIntegerVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmStringVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
   >

   <!ATTLIST Rm2DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmCubemapVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST Rm3DTextureVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmLightVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      LIGHT_ENABLED                 ( TRUE | FALSE ) #REQUIRED
      LIGHT_TYPE                    ( POSITIONAL | DIRECTIONAL | SPOTLIGHT ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      POSITION_0                    CDATA #REQUIRED
      POSITION_1                    CDATA #REQUIRED
      POSITION_2                    CDATA #REQUIRED
      DIRECTION_0                   CDATA #REQUIRED
      DIRECTION_1                   CDATA #REQUIRED
      DIRECTION_2                   CDATA #REQUIRED
      ATTENUATION_0                 CDATA #REQUIRED
      ATTENUATION_1                 CDATA #REQUIRED
      ATTENUATION_2                 CDATA #REQUIRED
      SPOTLIGHT_THETA               CDATA #REQUIRED
      SPOTLIGHT_PHI                 CDATA #REQUIRED
      RANGE                         CDATA #REQUIRED
      FALLOFF                       CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialVariable
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_SEMANTIC             CDATA #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      EMISSIVE_0                    CDATA #REQUIRED
      EMISSIVE_1                    CDATA #REQUIRED
      EMISSIVE_2                    CDATA #REQUIRED
      EMISSIVE_3                    CDATA #REQUIRED
      SPECULAR_POWER                CDATA #REQUIRED
   >
      
   <!ATTLIST RmRegistryBranch
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmPlugInData
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      PLUGIN_GUID                   CDATA #REQUIRED
   >

   <!ATTLIST RmClipboardNode
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >
   
   <!ATTLIST RmCamera                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      CAMERA_POSITION_X             CDATA #REQUIRED
      CAMERA_POSITION_Y             CDATA #REQUIRED
      CAMERA_POSITION_Z             CDATA #REQUIRED
      LOOK_AT_VECTOR_X              CDATA #REQUIRED
      LOOK_AT_VECTOR_Y              CDATA #REQUIRED
      LOOK_AT_VECTOR_Z              CDATA #REQUIRED
      UP_VECTOR_X                   CDATA #REQUIRED
      UP_VECTOR_Y                   CDATA #REQUIRED
      UP_VECTOR_Z                   CDATA #REQUIRED
      FOV                           CDATA #REQUIRED
      NEAR_CLIP_PLANE               CDATA #REQUIRED
      FAR_CLIP_PLANE                CDATA #REQUIRED
   >                                 

   <!ATTLIST RmCameraReference                
      NAME                          CDATA #REQUIRED
      API                           CDATA #REQUIRED
      USE_ACTIVE_CAMERA             ( TRUE | FALSE ) #REQUIRED
   >                               
   
   <!ATTLIST RmShaderCode                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTextDataBlock                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
]>
<RENDER_MONKEY>
 <RmEffectWorkspace NAME="Effect Workspace" API="" ACTIVE_EFFECT="Effect Workspace.Depth of Field Effect.Depth of Field" VALIDATION_STRING="" XML_VERSION="RenderMonkey 1.5">
  <RmRegistryBranch NAME="RM_REGISTRY" API="" XML_VERSION="RenderMonkey 1.5">
   <RmRegistryBranch NAME="RM_LOCAL" API="" XML_VERSION="RenderMonkey 1.5">
    <RmRegistryBranch NAME="RM_PLUGIN" API="" XML_VERSION="RenderMonkey 1.5"><RmTextDataBlock TYPE="TEXT"><![CDATA[
<DockingPaneLayouts><Application_Layout><Pane-1><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>1</Horiz><Pane-1>2</Pane-1><Panes>1</Panes></Pane-1><Pane-2><Type>2</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY><Horiz>0</Horiz><Pane-1>3</Pane-1><Pane-2>9</Pane-2><Panes>2</Panes></Pane-2><Pane-3><Type>2</Type><DockingCX>0</DockingCX><DockingCY>817</DockingCY><Horiz>1</Horiz><Pane-1>4</Pane-1><Pane-2>6</Pane-2><Pane-3>7</Pane-3><Panes>3</Panes></Pane-3><Pane-4><Type>1</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Selected>5</Selected><Panes>1</Panes><Pane-1>5</Pane-1></Pane-4><Pane-5><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Workspace</Title><ID>1000</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>4</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>4</LastHolder></Pane-5><Pane-6><Type>4</Type><DockingCX>0</DockingCX><DockingCY>0</DockingCY></Pane-6><Pane-7><Type>1</Type><DockingCX>593</DockingCX><DockingCY>250</DockingCY><Selected>8</Selected><Panes>1</Panes><Pane-1>8</Pane-1></Pane-7><Pane-8><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Artist Editor</Title><ID>1001</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>7</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>7</LastHolder></Pane-8><Pane-9><Type>1</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Selected>10</Selected><Panes>1</Panes><Pane-1>10</Pane-1></Pane-9><Pane-10><Type>0</Type><DockingCX>250</DockingCX><DockingCY>250</DockingCY><Title>Output</Title><ID>1002</ID><IconID>-1</IconID><Options>0</Options><DockingHolder>9</DockingHolder><FloatingHolder>0</FloatingHolder><LastHolder>9</LastHolder></Pane-10><Summary><TopContainer>1</TopContainer><Client>6</Client><Panes>10</Panes></Summary></Application_Layout></DockingPaneLayouts>
]]></RmTextDataBlock>
     <RmRegistryBranch NAME="RmVariableEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.teapotPos" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1100" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="NoteEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.5"/>
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.READ_THIS" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="774" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="658" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="428" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="229" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmPreviewDx9Window" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="EffectPlacementRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="524" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="543" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="523" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="543" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmPreviewGLPreview" API="" XML_VERSION="RenderMonkey 1.5"/>
     <RmRegistryBranch NAME="RmShaderEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.5"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Pixel Shader]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Scene Rendering Box]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="11" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="776" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="664" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="529" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
      <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Disassembly" API="" XML_VERSION="RenderMonkey 1.5"/>
       <RmStringVariable NAME="Editing Shader" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Vertex Shader]]></RmTextDataBlock></RmStringVariable>
       <RmStringVariable NAME="Editing Pass" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
Scene Rendering Box]]></RmTextDataBlock></RmStringVariable>
       <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="40" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="638" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="565" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="633" MIN="-10" MAX="10" CLAMP="FALSE"/>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmRenderStateBlockEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.5"/>
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="61" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="311" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1096" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="581" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureObjectEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.5"/>
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="198" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="198" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Width" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1096" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Height" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="545" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="ShowStatus" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Visible" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized X" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmIntegerVariable NAME="Minimized Y" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="-1" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmScalarEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 1.Ks" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1101" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 1.Ka" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1102" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 1.Kd" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1103" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 3.n_specular" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1111" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Depth of Field Pass 1.radiusScale" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1114" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmDynamicVariableEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.screenRes" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1105" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 1.teapotPos" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1104" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 2.teapotPos" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1107" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 3.teapotPos" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1108" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Depth of Field Pass 1.vMaxCoC" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1113" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="ShowSetup" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="TRUE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmVectorEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 1.lightDir" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1100" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 3.lightDir" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1112" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmColorEditor" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="NodeRepository" API="" XML_VERSION="RenderMonkey 1.5">
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 3.diffuse" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1109" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
       <RmRegistryBranch NAME="Effect Workspace.Depth of Field Effect.Depth of Field.Scene Rendering Teapot 3.specular" API="" XML_VERSION="RenderMonkey 1.5">
        <RmIntegerVariable NAME="DockPaneID" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="1110" MIN="-10" MAX="10" CLAMP="FALSE"/>
        <RmBooleanVariable NAME="FloatingPoint" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="FALSE"/>
        <RmIntegerVariable NAME="ColorType" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0" MIN="-10" MAX="10" CLAMP="FALSE"/>
       </RmRegistryBranch>
      </RmRegistryBranch>
     </RmRegistryBranch>
     <RmRegistryBranch NAME="RmTextureGenerator" API="" XML_VERSION="RenderMonkey 1.5">
      <RmRegistryBranch NAME="EditNodeRepository" API="" XML_VERSION="RenderMonkey 1.5"/>
     </RmRegistryBranch>
    </RmRegistryBranch>
    <RmRegistryBranch NAME="WORKSPACE" API="" XML_VERSION="RenderMonkey 1.5">
     <RmStringVariable NAME="LAST_SAVE" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
25/6/2004 18:35:12]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey Version 1.5 (build 385)]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="XML_VERSION" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey 1.5]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="BASE_WORKSPACE_PATH" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
C:\Documents and Settings\thorsten\Desktop\]]></RmTextDataBlock></RmStringVariable>
    </RmRegistryBranch>
   </RmRegistryBranch>
  </RmRegistryBranch>
  <RmStringVariable NAME="READ_THIS" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC=""><RmTextDataBlock TYPE="TEXT"><![CDATA[
The settings for this effect are tuned to a window size of 512x512.
Resizing the preview window will not increase the resolution of the rendered
image. To do that, the size of the renderable textures must be adjusted and the
new size set in the screenRes variable.]]></RmTextDataBlock></RmStringVariable>
  <RmEffectGroup NAME="Depth of Field Effect" API="">
   <RmDirectXEffect NAME="Depth of Field" API="D3D" ACTIVE_CAMERA="Camera">
    <RmCamera NAME="Camera" API="" CAMERA_POSITION_X="58.828144" CAMERA_POSITION_Y="76.318550" CAMERA_POSITION_Z="-316.747437" LOOK_AT_VECTOR_X="0.000000" LOOK_AT_VECTOR_Y="0.000000" LOOK_AT_VECTOR_Z="0.000000" UP_VECTOR_X="-0.142579" UP_VECTOR_Y="0.967951" UP_VECTOR_Z="0.206742" FOV="45.000000" NEAR_CLIP_PLANE="1.000000" FAR_CLIP_PLANE="10000.000000"/>
    <RmMatrixVariable NAME="view_matrix" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="View" VALUE_0="0.973704" VALUE_1="0.099672" VALUE_2="0.204857" VALUE_3="0.000000" VALUE_4="-0.142579" VALUE_5="0.967951" VALUE_6="0.206742" VALUE_7="0.000038" VALUE_8="-0.177685" VALUE_9="-0.230514" VALUE_10="0.956709" VALUE_11="331.080383" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmMatrixVariable NAME="view_proj_matrix" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewProjection" VALUE_0="2.350729" VALUE_1="0.240628" VALUE_2="0.494569" VALUE_3="0.000000" VALUE_4="-0.344216" VALUE_5="2.336840" VALUE_6="0.499119" VALUE_7="0.000092" VALUE_8="-0.177703" VALUE_9="-0.230537" VALUE_10="0.956804" VALUE_11="330.113403" VALUE_12="-0.177685" VALUE_13="-0.230514" VALUE_14="0.956709" VALUE_15="331.080383"/>
    <RmStreamMap NAME="Stream Mapping" API="">
     <RmStream NAME="" API="" STRIDE="32">
      <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0"/>
      <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0"/>
      <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0"/>
     </RmStream>
    </RmStreamMap>
    <RmPass NAME="Depth of Field Pass 1" API="D3D" PASS_INDEX="7" ENABLED="TRUE">
     <RmModelReference NAME="ScreenAlignedQuad" API=""/>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float2 screenRes;

struct VS_OUTPUT {
   float4 Pos: POSITION;
   float2 texCoord: TEXCOORD;
};

VS_OUTPUT main(float4 Pos: POSITION){
   VS_OUTPUT Out;

   // this is half a pixel with and height because
   // the screen-aligned quad has a width and height of 2
   float2 halfPixelSize = 1.0/screenRes;
   
   // Clean up inaccuracies
   Pos.xy = sign(Pos.xy);
   Out.Pos = float4(Pos.xy, 0, 1);
   
   // offset to properly align pixels with texels   
   Out.Pos.xy += float2(-1, 1) * halfPixelSize;
   
   Out.texCoord = 0.5 * Pos.xy + 0.5;
   Out.texCoord.y = 1.0 - Out.texCoord.y;

   return Out;
}


]]></RmShaderCode>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="ps_main"><RmShaderCode TYPE="TEXT"><![CDATA[
float2 screenRes;
#define NUM_TAPS 4

// maximum CoC radius and diameter in pixels
float2 vMaxCoC;

// scale factor for maximum CoC size on low res. image
float radiusScale;

sampler tSource;        // full resolution image
sampler tSourceLow;     // downsampled and filtered image

// contains poisson-distributed positions on the unit circle
float2 poisson[8] = {  
  float2( 0.0,      0.0),
  float2( 0.527837,-0.085868),
  float2(-0.040088, 0.536087),
  float2(-0.670445,-0.179949),
  float2(-0.419418,-0.616039),
  float2( 0.440453,-0.639399),
  float2(-0.757088, 0.349334),
  float2( 0.574619, 0.685879)
};

float4 ps_main(float2 texCoord : TEXCOORD0) : COLOR0
{
  float4 cOut;
  float discRadius, discRadiusLow, centerDepth;

  // pixel size (1/image resolution) of full resolution image
  float2 pixelSizeHigh = 1.0/screenRes;

  // pixel size of low resolution image
  float2 pixelSizeLow = 4.0 * pixelSizeHigh;

  cOut = tex2D(tSource, texCoord);   // fetch center tap
  centerDepth = cOut.a;              // save its depth

  // convert depth into blur radius in pixels
  discRadius = abs(cOut.a * vMaxCoC.y - vMaxCoC.x);

  // compute disc radius on low-res image
  discRadiusLow = discRadius * radiusScale;
  
  // reuse cOut as an accumulator
  cOut = 0;

  for(int t = 0; t < NUM_TAPS; t++)
  {
    // fetch low-res tap
    float2 coordLow = texCoord + (pixelSizeLow * poisson[t] *
                      discRadiusLow);
    float4 tapLow = tex2D(tSourceLow, coordLow);

    // fetch high-res tap
    float2 coordHigh = texCoord + (pixelSizeHigh * poisson[t] *
                       discRadius);
    float4 tapHigh = tex2D(tSource, coordHigh);

    // put tap blurriness into [0, 1] range
    float tapBlur = abs(tapHigh.a * 2.0 - 1.0);
    
    // mix low- and hi-res taps based on tap blurriness
    float4 tap = lerp(tapHigh, tapLow, tapBlur);

    // apply leaking reduction: lower weight for taps that are
    // closer than the center tap and in focus
    tap.a = (tap.a >= centerDepth) ? 1.0 : abs(tap.a * 2.0 - 1.0);

    // accumulate
    cOut.rgb += tap.rgb * tap.a;
    cOut.a += tap.a;
  }

  // normalize and return result
  return (cOut / cOut.a);
}

]]></RmShaderCode>
      <RmSampler NAME="tSource" API="" REGISTER="0"/>
      <RmSampler NAME="tSourceLow" API="" REGISTER="1"/>
      <RmShaderConstant NAME="radiusScale" API="" REGISTER="6"/>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="4"/>
      <RmShaderConstant NAME="vMaxCoC" API="" REGISTER="5"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmDynamicVariable NAME="vMaxCoC" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="2" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="5.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="10.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmFloatVariable NAME="radiusScale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.400000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
     <RmTextureObject NAME="tSource" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="backbuffer" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="tSourceLow" API="D3D" STATE_INDEX="1">
      <RmTextureReference NAME="lowres" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="3" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Depth of Field Pass 2" API="D3D" PASS_INDEX="8" ENABLED="TRUE">
     <RmModelReference NAME="ScreenAlignedQuad" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_BLENDOP" API="D3D" STATE="171" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="D3DRS_ALPHABLENDENABLE" API="D3D" STATE="27" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="D3DRS_SRCBLEND" API="D3D" STATE="19" VALUE="5" USAGE="RENDER_STATE"/>
      <RmState NAME="D3DRS_DESTBLEND" API="D3D" STATE="20" VALUE="6" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="ps_main"><RmShaderCode TYPE="TEXT"><![CDATA[
float2 screenRes;
#define NUM_TAPS 4

// maximum CoC radius and diameter in pixels
float2 vMaxCoC;

// scale factor for maximum CoC size on low res. image
float radiusScale;

sampler tSource;        // full resolution image
sampler tSourceLow;     // downsampled and filtered image

// contains poisson-distributed positions on the unit circle
float2 poisson[8] = {  
  float2( 0.0,      0.0),
  float2( 0.527837,-0.085868),
  float2(-0.040088, 0.536087),
  float2(-0.670445,-0.179949),
  float2(-0.419418,-0.616039),
  float2( 0.440453,-0.639399),
  float2(-0.757088, 0.349334),
  float2( 0.574619, 0.685879)
};

float4 ps_main(float2 texCoord : TEXCOORD0,
               float2 pixelSizeHigh : TEXCOORD1) : COLOR0
{
  float4 cOut;
  float discRadius, discRadiusLow, centerDepth;

  // pixel size of low resolution image
  float2 pixelSizeLow = 4.0 * pixelSizeHigh;

  cOut = tex2D(tSource, texCoord);   // fetch center tap
  centerDepth = cOut.a;              // save its depth

  // convert depth into blur radius in pixels
  discRadius = abs(cOut.a * vMaxCoC.y - vMaxCoC.x);

  // compute disc radius on low-res image
  discRadiusLow = discRadius * radiusScale;
  
  // reuse cOut as an accumulator
  cOut = 0;

  for(int t = 4; t < 4+NUM_TAPS; t++)
  {
    // fetch low-res tap
    float2 coordLow = texCoord + (pixelSizeLow * poisson[t] *
                      discRadiusLow);
    float4 tapLow = tex2D(tSourceLow, coordLow);

    // fetch high-res tap
    float2 coordHigh = texCoord + (pixelSizeHigh * poisson[t] *
                       discRadius);
    float4 tapHigh = tex2D(tSource, coordHigh);

    // put tap blurriness into [0, 1] range
    float tapBlur = abs(tapHigh.a * 2.0 - 1.0);
    
    // mix low- and hi-res taps based on tap blurriness
    float4 tap = lerp(tapHigh, tapLow, tapBlur);

    // apply leaking reduction: lower weight for taps that are
    // closer than the center tap and in focus
    tap.a = (tap.a >= centerDepth) ? 1.0 : abs(tap.a * 2.0 - 1.0);

    // accumulate
    cOut.rgb += tap.rgb * tap.a;
    cOut.a += tap.a;
  }

  // normalize and return result
  cOut = cOut / cOut.a;
  
  // alpha of 0.5 so that alpha blending averages results with
  // previous DoF pass
  cOut.a = 0.5;
  
  return cOut;
}

]]></RmShaderCode>
      <RmSampler NAME="tSource" API="" REGISTER="0"/>
      <RmSampler NAME="tSourceLow" API="" REGISTER="1"/>
      <RmShaderConstant NAME="radiusScale" API="" REGISTER="9"/>
      <RmShaderConstant NAME="vMaxCoC" API="" REGISTER="8"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float2 screenRes;

struct VS_OUTPUT {
   float4 Pos: POSITION;
   float2 texCoord: TEXCOORD0;
   float2 pixelSizeHigh: TEXCOORD1;
};

VS_OUTPUT main(float4 Pos: POSITION)
{
   VS_OUTPUT Out;

   // this is half a pixel with and height because
   // the screen-aligned quad has a width and height of 2
   float2 halfPixelSize = 1.0/screenRes;
   
   // Clean up inaccuracies
   Pos.xy = sign(Pos.xy);
   Out.Pos = float4(Pos.xy, 0, 1);
   
   // offset to properly align pixels with texels   
   Out.Pos.xy += float2(-1, 1) * halfPixelSize;
   
   Out.texCoord = 0.5 * Pos.xy + 0.5;
   Out.texCoord.y = 1.0 - Out.texCoord.y;

   // pixel size (1/image resolution) of full resolution image
   // this is computed here and passed down so that the pixel
   // shader doesn't blow the 2.0 instruction limit
   Out.pixelSizeHigh = 1.0/screenRes;

   return Out;
}


]]></RmShaderCode>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmFloatVariable NAME="radiusScale" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.400000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
     <RmDynamicVariable NAME="vMaxCoC" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="2" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="5.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="10.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmTextureObject NAME="tSourceLow" API="D3D" STATE_INDEX="1">
      <RmTextureReference NAME="lowres" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="3" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="tSource" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="backbuffer" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Scene Rendering Box" API="D3D" PASS_INDEX="0" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Cube" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="2" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;

sampler tCubeMap;


float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float3 Tex    : TEXCOORD0,
             float  depth  : TEXCOORD1 ) : COLOR
{
 
   float4 FinalColor = texCUBE(tCubeMap, Tex);
   
   FinalColor.a = ComputeDepthBlur (depth);
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmSampler NAME="tCubeMap" API="" REGISTER="0"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Tex    : TEXCOORD0;
   float  depth  : TEXCOORD1;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz *= 600.0;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 
   
   Out.Tex = inPos.xyz;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmRenderTarget NAME="backbuffer" API="" INDEX="0" RENDER_TO_SCREEN="FALSE" COLOR_CLEAR="TRUE" DEPTH_CLEAR="TRUE" CLEAR_COLOR_VALUE="0" DEPTH_CLEAR_VALUE="1.000000"/>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="tCubeMap" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="EnvironmentCube" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Scene Rendering Teapot 1" API="D3D" PASS_INDEX="1" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Teapot" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;
float4 ambient;
float4 diffuse;
float4 specular;
float n_specular;
float Ka;
float Ks;
float Kd;

sampler tBase;


float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float4 Diff   : COLOR0,
             float3 Normal : TEXCOORD0,
             float3 View   : TEXCOORD1,
             float3 Light  : TEXCOORD2,
             float2 Tex    : TEXCOORD4,
             float  depth  : TEXCOORD3 ) : COLOR
{
   // Compute the reflection vector:
   float3 vReflect = normalize( 2 * dot( Normal, Light) * Normal - Light );       

   // Compute ambient term:
   float4 AmbientColor = ambient * Ka;

   // Compute diffuse term:
   float4 DiffuseColor = diffuse * Kd * max( 0, dot( Normal, Light ));

   // Compute specular term:
   float4 SpecularColor = specular * Ks * pow( max( 0, dot(vReflect, View)), n_specular );
   
   float4 FinalColor = (AmbientColor + DiffuseColor) * tex2D(tBase, Tex) + SpecularColor;
   
   FinalColor.a = ComputeDepthBlur (depth);
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmSampler NAME="tBase" API="" REGISTER="0"/>
      <RmShaderConstant NAME="Kd" API="" REGISTER="10"/>
      <RmShaderConstant NAME="Ks" API="" REGISTER="9"/>
      <RmShaderConstant NAME="ambient" API="" REGISTER="4"/>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="diffuse" API="" REGISTER="5"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
      <RmShaderConstant NAME="n_specular" API="" REGISTER="7"/>
      <RmShaderConstant NAME="specular" API="" REGISTER="6"/>
      <RmShaderConstant NAME="Ka" API="" REGISTER="8"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Norm   : TEXCOORD0;
   float3 View   : TEXCOORD1;
   float3 Light  : TEXCOORD2;
   float2 Tex    : TEXCOORD4;
   float  depth  : TEXCOORD3;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz += 10.0 * teapotPos;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 
   
   // Output light vector:
   Out.Light = -lightDir;

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 

   // Transform the input normal to view space:
   Out.Norm = normalize( mul( view_matrix, inNorm ) );   
 
   // Compute the view direction in view space:
   Out.View = - normalize( Pview );

   // Propagate texture coordinate for the object:
   Out.Tex = inTex;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="lightDir" API="" REGISTER="9"/>
      <RmShaderConstant NAME="teapotPos" API="" REGISTER="8"/>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmRenderTarget NAME="backbuffer" API="" INDEX="0" RENDER_TO_SCREEN="FALSE" COLOR_CLEAR="FALSE" DEPTH_CLEAR="FALSE" CLEAR_COLOR_VALUE="0" DEPTH_CLEAR_VALUE="1.000000"/>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmFloatVariable NAME="Kd" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.640000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="Ks" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.220000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="n_specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="7.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
     <RmVectorVariable NAME="lightDir" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="-0.403780" VALUE_1="-0.400001" VALUE_2="0.866030" VALUE_3="0.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
     <RmDynamicVariable NAME="teapotPos" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="-10.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmFloatVariable NAME="Ka" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.280000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmColorVariable NAME="specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="0.956737" VALUE_2="0.670380" VALUE_3="1.000000"/>
     <RmColorVariable NAME="ambient" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.925309" VALUE_1="0.937984" VALUE_2="0.937984" VALUE_3="1.000000"/>
     <RmColorVariable NAME="diffuse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.840420" VALUE_1="0.862341" VALUE_2="0.890411" VALUE_3="1.000000"/>
     <RmTextureObject NAME="tBase" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="Teapot1Texture" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Scene Rendering Teapot 2" API="D3D" PASS_INDEX="2" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Teapot" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;
float4 ambient;
float4 diffuse;
float4 specular;
float n_specular;
float Ka;
float Ks;
float Kd;

sampler tBase;


float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float4 Diff   : COLOR0,
             float3 Normal : TEXCOORD0,
             float3 View   : TEXCOORD1,
             float3 Light  : TEXCOORD2,
             float2 Tex    : TEXCOORD4,
             float  depth  : TEXCOORD3 ) : COLOR
{
   // Compute the reflection vector:
   float3 vReflect = normalize( 2 * dot( Normal, Light) * Normal - Light );       

   // Compute ambient term:
   float4 AmbientColor = ambient * Ka;

   // Compute diffuse term:
   float4 DiffuseColor = diffuse * Kd * max( 0, dot( Normal, Light ));

   // Compute specular term:
   float4 SpecularColor = specular * Ks * pow( max( 0, dot(vReflect, View)), n_specular );
   
   float4 FinalColor = (AmbientColor + DiffuseColor) * tex2D(tBase, Tex) + SpecularColor;
   
   FinalColor.a = ComputeDepthBlur (depth);
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmSampler NAME="tBase" API="" REGISTER="0"/>
      <RmShaderConstant NAME="Kd" API="" REGISTER="10"/>
      <RmShaderConstant NAME="Ks" API="" REGISTER="9"/>
      <RmShaderConstant NAME="ambient" API="" REGISTER="4"/>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="diffuse" API="" REGISTER="5"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
      <RmShaderConstant NAME="n_specular" API="" REGISTER="7"/>
      <RmShaderConstant NAME="specular" API="" REGISTER="6"/>
      <RmShaderConstant NAME="Ka" API="" REGISTER="8"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Norm   : TEXCOORD0;
   float3 View   : TEXCOORD1;
   float3 Light  : TEXCOORD2;
   float2 Tex    : TEXCOORD4;
   float  depth  : TEXCOORD3;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz += 10.0 * teapotPos;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 
   
   // Output light vector:
   Out.Light = -lightDir;

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 

   // Transform the input normal to view space:
   Out.Norm = normalize( mul( view_matrix, inNorm ) );   
 
   // Compute the view direction in view space:
   Out.View = - normalize( Pview );

   // Propagate texture coordinate for the object:
   Out.Tex = inTex;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="lightDir" API="" REGISTER="9"/>
      <RmShaderConstant NAME="teapotPos" API="" REGISTER="8"/>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmRenderTarget NAME="backbuffer" API="" INDEX="0" RENDER_TO_SCREEN="FALSE" COLOR_CLEAR="FALSE" DEPTH_CLEAR="FALSE" CLEAR_COLOR_VALUE="0" DEPTH_CLEAR_VALUE="1.000000"/>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmFloatVariable NAME="Kd" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.640000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="Ks" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.220000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="n_specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="7.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
     <RmVectorVariable NAME="lightDir" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="-0.403780" VALUE_1="-0.400001" VALUE_2="0.866030" VALUE_3="0.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
     <RmDynamicVariable NAME="teapotPos" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="10.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmFloatVariable NAME="Ka" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.280000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmColorVariable NAME="specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="0.956737" VALUE_2="0.670380" VALUE_3="1.000000"/>
     <RmColorVariable NAME="ambient" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.925309" VALUE_1="0.937984" VALUE_2="0.937984" VALUE_3="1.000000"/>
     <RmColorVariable NAME="diffuse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.840420" VALUE_1="0.862341" VALUE_2="0.890411" VALUE_3="1.000000"/>
     <RmTextureObject NAME="tBase" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="Teapot2Texture" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Scene Rendering Teapot 3" API="D3D" PASS_INDEX="3" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Teapot" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;
float4 ambient;
float4 diffuse;
float4 specular;
float n_specular;
float Ka;
float Ks;
float Kd;

sampler tBase;


float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float4 Diff   : COLOR0,
             float3 Normal : TEXCOORD0,
             float3 View   : TEXCOORD1,
             float3 Light  : TEXCOORD2,
             float2 Tex    : TEXCOORD4,
             float  depth  : TEXCOORD3 ) : COLOR
{
   // Compute the reflection vector:
   float3 vReflect = normalize( 2 * dot( Normal, Light) * Normal - Light );       

   // Compute ambient term:
   float4 AmbientColor = ambient * Ka;

   // Compute diffuse term:
   float4 DiffuseColor = diffuse * Kd * max( 0, dot( Normal, Light ));

   // Compute specular term:
   float4 SpecularColor = specular * Ks * pow( max( 0, dot(vReflect, View)), n_specular );
   
   float4 FinalColor = (AmbientColor + DiffuseColor) * tex2D(tBase, Tex) + SpecularColor;
   
   FinalColor.a = ComputeDepthBlur (depth);
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmSampler NAME="tBase" API="" REGISTER="0"/>
      <RmShaderConstant NAME="Kd" API="" REGISTER="10"/>
      <RmShaderConstant NAME="Ks" API="" REGISTER="9"/>
      <RmShaderConstant NAME="ambient" API="" REGISTER="4"/>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="diffuse" API="" REGISTER="5"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
      <RmShaderConstant NAME="n_specular" API="" REGISTER="7"/>
      <RmShaderConstant NAME="specular" API="" REGISTER="6"/>
      <RmShaderConstant NAME="Ka" API="" REGISTER="8"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Norm   : TEXCOORD0;
   float3 View   : TEXCOORD1;
   float3 Light  : TEXCOORD2;
   float2 Tex    : TEXCOORD4;
   float  depth  : TEXCOORD3;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz += 10.0 * teapotPos;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 
   
   // Output light vector:
   Out.Light = -lightDir;

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 

   // Transform the input normal to view space:
   Out.Norm = normalize( mul( view_matrix, inNorm ) );   
 
   // Compute the view direction in view space:
   Out.View = - normalize( Pview );

   // Propagate texture coordinate for the object:
   Out.Tex = inTex;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="lightDir" API="" REGISTER="9"/>
      <RmShaderConstant NAME="teapotPos" API="" REGISTER="8"/>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmRenderTarget NAME="backbuffer" API="" INDEX="0" RENDER_TO_SCREEN="FALSE" COLOR_CLEAR="FALSE" DEPTH_CLEAR="FALSE" CLEAR_COLOR_VALUE="0" DEPTH_CLEAR_VALUE="1.000000"/>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmFloatVariable NAME="Kd" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.640000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="Ks" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.220000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="n_specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="51.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
     <RmVectorVariable NAME="lightDir" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="-0.646845" VALUE_1="-0.517476" VALUE_2="0.560187" VALUE_3="0.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="TRUE"/>
     <RmDynamicVariable NAME="teapotPos" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="30.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmFloatVariable NAME="Ka" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.280000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmColorVariable NAME="specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.993287" VALUE_1="1.000000" VALUE_2="0.986573" VALUE_3="1.000000"/>
     <RmColorVariable NAME="ambient" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.925309" VALUE_1="0.937984" VALUE_2="0.937984" VALUE_3="1.000000"/>
     <RmColorVariable NAME="diffuse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.890411" VALUE_1="0.111410" VALUE_2="0.000000" VALUE_3="1.000000"/>
     <RmTextureObject NAME="tBase" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="Teapot3Texture" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Downsampling" API="D3D" PASS_INDEX="4" ENABLED="TRUE">
     <RmModelReference NAME="ScreenAlignedQuad" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="1" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="ps_main"><RmShaderCode TYPE="TEXT"><![CDATA[
sampler2D tScreenImage;
float2 screenRes;

float4 ps_main( float2 texCoord: TEXCOORD0 ) : COLOR0
{
   float2 texCoordSample = 0;
   float4 cOut;
   
   float2 pixelSize = 1.0 / screenRes;

   // it would be more efficient if the texture coordinates
   // were computed in the vertex shader and passed down
   texCoordSample.x = texCoord.x - pixelSize.x;
   texCoordSample.y = texCoord.y + pixelSize.y;
   cOut = tex2D(tScreenImage, texCoordSample);
   
   texCoordSample.x = texCoord.x + pixelSize.x;
   texCoordSample.y = texCoord.y + pixelSize.y;
   cOut += tex2D(tScreenImage, texCoordSample);
   
   texCoordSample.x = texCoord.x + pixelSize.x;
   texCoordSample.y = texCoord.y - pixelSize.y;
   cOut += tex2D(tScreenImage, texCoordSample);
   
   texCoordSample.x = texCoord.x - pixelSize.x;
   texCoordSample.y = texCoord.y - pixelSize.y;
   cOut += tex2D(tScreenImage, texCoordSample);
      
   return cOut * 0.25;
}



]]></RmShaderCode>
      <RmSampler NAME="tScreenImage" API="" REGISTER="0"/>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float2 screenRes;

struct VS_OUTPUT {
   float4 Pos: POSITION;
   float2 texCoord: TEXCOORD;
};

VS_OUTPUT main(float4 Pos: POSITION){
   VS_OUTPUT Out;

   // this is half a pixel with and height because
   // the screen-aligned quad has a width and height of 2
   float2 halfPixelSize = 4.0/screenRes;
   
   // Clean up inaccuracies
   Pos.xy = sign(Pos.xy);

   Out.Pos = float4(Pos.xy, 0, 1);
   
   // offset to properly align pixels with texels
   Out.Pos.xy += float2(-1, 1) * halfPixelSize;
   
   Out.texCoord = 0.5 * Pos.xy + 0.5;
   Out.texCoord.y = 1.0 - Out.texCoord.y;

   return Out;
}


]]></RmShaderCode>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmRenderTarget NAME="lowres" API="" INDEX="0" RENDER_TO_SCREEN="FALSE" COLOR_CLEAR="TRUE" DEPTH_CLEAR="TRUE" CLEAR_COLOR_VALUE="0" DEPTH_CLEAR_VALUE="1.000000"/>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="tScreenImage" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="backbuffer" API=""/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Gaussian1" API="D3D" PASS_INDEX="5" ENABLED="TRUE">
     <RmModelReference NAME="ScreenAlignedQuad" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="1" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="ps_main"><RmShaderCode TYPE="TEXT"><![CDATA[
sampler2D tLowResImage;
float2 screenRes;

float4 ps_main( float2 texCoord: TEXCOORD0 ) : COLOR0
{
   float2 texCoordSample = 0;
   float4 cOut;
   
   float2 pixelSize = 4.0 / screenRes;

   // using bilinear texture lookups, this could be implemented
   // with just 2 texture fetches
   
   cOut = 0.5 * tex2D(tLowResImage, texCoord);
   
   // ideally the vertex shader would compute the texture
   // coords and pass them down   
   texCoordSample.x = texCoord.x;
   texCoordSample.y = texCoord.y + pixelSize.y;
   cOut += 0.25 * tex2D(tLowResImage, texCoordSample);
   
   texCoordSample.y = texCoord.y - pixelSize.y;
   cOut += 0.25 * tex2D(tLowResImage, texCoordSample);
      
   return cOut;
}



]]></RmShaderCode>
      <RmSampler NAME="tLowResImage" API="" REGISTER="0"/>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float2 screenRes;

struct VS_OUTPUT {
   float4 Pos: POSITION;
   float2 texCoord: TEXCOORD;
};

VS_OUTPUT main(float4 Pos: POSITION){
   VS_OUTPUT Out;

   // this is half a pixel with and height because
   // the screen-aligned quad has a width and height of 2
   float2 halfPixelSize = 4.0/screenRes;

   // Clean up inaccuracies
   Pos.xy = sign(Pos.xy);
   Out.Pos = float4(Pos.xy, 0, 1);
   
   // offset to properly align pixels with texels
   Out.Pos.xy += float2(-1, 1) * halfPixelSize;
   
   Out.texCoord = 0.5 * Pos.xy + 0.5;
   Out.texCoord.y = 1.0 - Out.texCoord.y;

   return Out;
}


]]></RmShaderCode>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmRenderTarget NAME="temp" API="" INDEX="0" RENDER_TO_SCREEN="FALSE" COLOR_CLEAR="TRUE" DEPTH_CLEAR="TRUE" CLEAR_COLOR_VALUE="0" DEPTH_CLEAR_VALUE="1.000000"/>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="tLowResImage" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="lowres" API=""/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Gaussian2" API="D3D" PASS_INDEX="6" ENABLED="TRUE">
     <RmModelReference NAME="ScreenAlignedQuad" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="1" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="ps_main"><RmShaderCode TYPE="TEXT"><![CDATA[
sampler2D tLowResImage;
float2 screenRes;

float4 ps_main( float2 texCoord: TEXCOORD0 ) : COLOR0
{
   float2 texCoordSample = 0;
   float4 cOut;
   
   float2 pixelSize = 4.0 / screenRes;

   
   cOut = 0.5 * tex2D(tLowResImage, texCoord);
   
   texCoordSample.y = texCoord.y;
   texCoordSample.x = texCoord.x + pixelSize.x;
   cOut += 0.25 * tex2D(tLowResImage, texCoordSample);
   
   texCoordSample.x = texCoord.x - pixelSize.x;
   cOut += 0.25 * tex2D(tLowResImage, texCoordSample);
      
   return cOut;
}



]]></RmShaderCode>
      <RmSampler NAME="tLowResImage" API="" REGISTER="0"/>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float2 screenRes;

struct VS_OUTPUT {
   float4 Pos: POSITION;
   float2 texCoord: TEXCOORD;
};

VS_OUTPUT main(float4 Pos: POSITION){
   VS_OUTPUT Out;

   // this is half a pixel with and height because
   // the screen-aligned quad has a width and height of 2
   float2 halfPixelSize = 4.0/screenRes;

   // Clean up inaccuracies
   Pos.xy = sign(Pos.xy);
   Out.Pos = float4(Pos.xy, 0, 1);

   // offset to properly align pixels with texels
   Out.Pos.xy += float2(-1, 1) * halfPixelSize;
   
   Out.texCoord = 0.5 * Pos.xy + 0.5;
   Out.texCoord.y = 1.0 - Out.texCoord.y;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="screenRes" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmRenderTarget NAME="lowres" API="" INDEX="0" RENDER_TO_SCREEN="FALSE" COLOR_CLEAR="TRUE" DEPTH_CLEAR="TRUE" CLEAR_COLOR_VALUE="0" DEPTH_CLEAR_VALUE="1.000000"/>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmTextureObject NAME="tLowResImage" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="temp" API=""/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
   </RmDirectXEffect>
   <RmDirectXEffect NAME="Depth" API="D3D" ACTIVE_CAMERA="Camera">
    <RmCamera NAME="Camera" API="" CAMERA_POSITION_X="87.976257" CAMERA_POSITION_Y="73.854065" CAMERA_POSITION_Z="-329.749115" LOOK_AT_VECTOR_X="0.000000" LOOK_AT_VECTOR_Y="0.000000" LOOK_AT_VECTOR_Z="0.000000" UP_VECTOR_X="-0.069911" UP_VECTOR_Y="0.977253" UP_VECTOR_Z="0.200224" FOV="45.000000" NEAR_CLIP_PLANE="1.000000" FAR_CLIP_PLANE="10000.000000"/>
    <RmMatrixVariable NAME="view_matrix" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="View" VALUE_0="0.965212" VALUE_1="0.015574" VALUE_2="0.261004" VALUE_3="0.000000" VALUE_4="-0.069911" VALUE_5="0.977253" VALUE_6="0.200224" VALUE_7="0.000092" VALUE_8="-0.251949" VALUE_9="-0.211505" VALUE_10="0.944345" VALUE_11="349.182983" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
    <RmMatrixVariable NAME="view_proj_matrix" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="ViewProjection" VALUE_0="2.334788" VALUE_1="0.037672" VALUE_2="0.631353" VALUE_3="0.000000" VALUE_4="-0.168780" VALUE_5="2.359297" VALUE_6="0.483383" VALUE_7="0.000221" VALUE_8="-0.251974" VALUE_9="-0.211527" VALUE_10="0.944439" VALUE_11="348.217804" VALUE_12="-0.251949" VALUE_13="-0.211505" VALUE_14="0.944345" VALUE_15="349.182983"/>
    <RmStreamMap NAME="Stream Mapping" API="">
     <RmStream NAME="" API="" STRIDE="32">
      <RmStreamChannel NAME="Position_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0"/>
      <RmStreamChannel NAME="Normal_0" API="" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="3" USAGE_INDEX="0"/>
      <RmStreamChannel NAME="TexCoord_0" API="" DATA_SIZE="8" DATA_TYPE="1" REGISTER="0" USAGE="5" USAGE_INDEX="0"/>
     </RmStream>
    </RmStreamMap>
    <RmPass NAME="Scene Rendering Teapot 1" API="D3D" PASS_INDEX="1" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Teapot" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;
float4 ambient;
float4 diffuse;
float4 specular;
float n_specular;
float Ka;
float Ks;
float Kd;

sampler tBase;


float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float4 Diff   : COLOR0,
             float3 Normal : TEXCOORD0,
             float3 View   : TEXCOORD1,
             float3 Light  : TEXCOORD2,
             float2 Tex    : TEXCOORD4,
             float  depth  : TEXCOORD3 ) : COLOR
{   
   float4 FinalColor = ComputeDepthBlur (depth).xxxx;
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Norm   : TEXCOORD0;
   float3 View   : TEXCOORD1;
   float3 Light  : TEXCOORD2;
   float2 Tex    : TEXCOORD4;
   float  depth  : TEXCOORD3;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz += 10.0 * teapotPos;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 
   
   // Output light vector:
   Out.Light = -lightDir;

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 

   // Transform the input normal to view space:
   Out.Norm = normalize( mul( view_matrix, inNorm ) );   
 
   // Compute the view direction in view space:
   Out.View = - normalize( Pview );

   // Propagate texture coordinate for the object:
   Out.Tex = inTex;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="lightDir" API="" REGISTER="9"/>
      <RmShaderConstant NAME="teapotPos" API="" REGISTER="8"/>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmFloatVariable NAME="Kd" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.640000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="Ks" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.220000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="n_specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="7.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
     <RmVectorVariable NAME="lightDir" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="-0.403780" VALUE_1="-0.400001" VALUE_2="0.866030" VALUE_3="0.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
     <RmDynamicVariable NAME="teapotPos" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="-10.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmFloatVariable NAME="Ka" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.280000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmColorVariable NAME="specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="0.956737" VALUE_2="0.670380" VALUE_3="1.000000"/>
     <RmColorVariable NAME="ambient" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.925309" VALUE_1="0.937984" VALUE_2="0.937984" VALUE_3="1.000000"/>
     <RmColorVariable NAME="diffuse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.840420" VALUE_1="0.862341" VALUE_2="0.890411" VALUE_3="1.000000"/>
     <RmTextureObject NAME="tBase" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="Teapot1Texture" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Scene Rendering Teapot 2" API="D3D" PASS_INDEX="2" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Teapot" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;
float4 ambient;
float4 diffuse;
float4 specular;
float n_specular;
float Ka;
float Ks;
float Kd;

sampler tBase;


float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float4 Diff   : COLOR0,
             float3 Normal : TEXCOORD0,
             float3 View   : TEXCOORD1,
             float3 Light  : TEXCOORD2,
             float2 Tex    : TEXCOORD4,
             float  depth  : TEXCOORD3 ) : COLOR
{
   float4 FinalColor = ComputeDepthBlur (depth).xxxx;
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Norm   : TEXCOORD0;
   float3 View   : TEXCOORD1;
   float3 Light  : TEXCOORD2;
   float2 Tex    : TEXCOORD4;
   float  depth  : TEXCOORD3;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz += 10.0 * teapotPos;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 
   
   // Output light vector:
   Out.Light = -lightDir;

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 

   // Transform the input normal to view space:
   Out.Norm = normalize( mul( view_matrix, inNorm ) );   
 
   // Compute the view direction in view space:
   Out.View = - normalize( Pview );

   // Propagate texture coordinate for the object:
   Out.Tex = inTex;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="lightDir" API="" REGISTER="9"/>
      <RmShaderConstant NAME="teapotPos" API="" REGISTER="8"/>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmFloatVariable NAME="Kd" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.640000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="Ks" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.220000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="n_specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="7.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
     <RmVectorVariable NAME="lightDir" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="-0.403780" VALUE_1="-0.400001" VALUE_2="0.866030" VALUE_3="0.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
     <RmDynamicVariable NAME="teapotPos" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="10.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmFloatVariable NAME="Ka" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.280000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmColorVariable NAME="specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="1.000000" VALUE_1="0.956737" VALUE_2="0.670380" VALUE_3="1.000000"/>
     <RmColorVariable NAME="ambient" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.925309" VALUE_1="0.937984" VALUE_2="0.937984" VALUE_3="1.000000"/>
     <RmColorVariable NAME="diffuse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.840420" VALUE_1="0.862341" VALUE_2="0.890411" VALUE_3="1.000000"/>
     <RmTextureObject NAME="tBase" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="Teapot2Texture" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Scene Rendering Teapot 3" API="D3D" PASS_INDEX="3" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Teapot" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;
float4 ambient;
float4 diffuse;
float4 specular;
float n_specular;
float Ka;
float Ks;
float Kd;

sampler tBase;


float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float4 Diff   : COLOR0,
             float3 Normal : TEXCOORD0,
             float3 View   : TEXCOORD1,
             float3 Light  : TEXCOORD2,
             float2 Tex    : TEXCOORD4,
             float  depth  : TEXCOORD3 ) : COLOR
{
   float4 FinalColor = ComputeDepthBlur (depth).xxxx;
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Norm   : TEXCOORD0;
   float3 View   : TEXCOORD1;
   float3 Light  : TEXCOORD2;
   float2 Tex    : TEXCOORD4;
   float  depth  : TEXCOORD3;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz += 10.0 * teapotPos;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 
   
   // Output light vector:
   Out.Light = -lightDir;

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 

   // Transform the input normal to view space:
   Out.Norm = normalize( mul( view_matrix, inNorm ) );   
 
   // Compute the view direction in view space:
   Out.View = - normalize( Pview );

   // Propagate texture coordinate for the object:
   Out.Tex = inTex;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="lightDir" API="" REGISTER="9"/>
      <RmShaderConstant NAME="teapotPos" API="" REGISTER="8"/>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
     <RmFloatVariable NAME="Kd" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.640000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="Ks" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.220000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmFloatVariable NAME="n_specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="51.000000" MIN="0.000000" MAX="100.000000" CLAMP="TRUE"/>
     <RmVectorVariable NAME="lightDir" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="-0.646845" VALUE_1="-0.517476" VALUE_2="0.560187" VALUE_3="0.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="TRUE"/>
     <RmDynamicVariable NAME="teapotPos" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="3" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
      <RmDynamicVariableValueContainer>
       <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="0.000000"/>
       <RmDynamicVariableValue ROW_INDEX="2" COLUMN_INDEX="0" VALUE="30.000000"/>
      </RmDynamicVariableValueContainer>
     </RmDynamicVariable>
     <RmFloatVariable NAME="Ka" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE="0.280000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
     <RmColorVariable NAME="specular" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.993287" VALUE_1="1.000000" VALUE_2="0.986573" VALUE_3="1.000000"/>
     <RmColorVariable NAME="ambient" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.925309" VALUE_1="0.937984" VALUE_2="0.937984" VALUE_3="1.000000"/>
     <RmColorVariable NAME="diffuse" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VALUE_0="0.890411" VALUE_1="0.111410" VALUE_2="0.000000" VALUE_3="1.000000"/>
     <RmTextureObject NAME="tBase" API="D3D" STATE_INDEX="0">
      <RmTextureReference NAME="Teapot3Texture" API=""/>
      <RmState NAME="D3DSAMP_MAGFILTER" API="D3D" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" API="D3D" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSU" API="D3D" STATE="1" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" API="D3D" STATE="2" VALUE="1" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" API="D3D" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Scene Rendering Box" API="D3D" PASS_INDEX="0" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" API="" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Cube" API=""/>
     <RmRenderStateBlock NAME="Render State" API="D3D">
      <RmState NAME="D3DRS_CULLMODE" API="D3D" STATE="22" VALUE="2" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" API="D3D" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float far_clamp;
float d_far;
float d_focus;
float d_near;

float ComputeDepthBlur (float depth)
{
   float f;

   if (depth < d_focus)
   {
      // scale depth value between near blur distance and focal distance to [-1, 0] range
      f = (depth - d_focus)/(d_focus - d_near);
   }
   else
   {
      // scale depth value between focal distance and far blur
      // distance to [0, 1] range
      f = (depth - d_focus)/(d_far - d_focus);

      // clamp the far blur to a maximum blurriness
      f = clamp (f, 0, far_clamp);
   }

   // scale and bias into [0, 1] range
   return f * 0.5f + 0.5f;
}



float4 main( float3 Tex    : TEXCOORD0,
             float  depth  : TEXCOORD1 ) : COLOR
{
   float4 FinalColor = ComputeDepthBlur (depth).xxxx;
   
   return FinalColor;
}







]]></RmShaderCode>
      <RmShaderConstant NAME="d_far" API="" REGISTER="1"/>
      <RmShaderConstant NAME="d_focus" API="" REGISTER="2"/>
      <RmShaderConstant NAME="d_near" API="" REGISTER="3"/>
      <RmShaderConstant NAME="far_clamp" API="" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" API="D3D" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float3 teapotPos;
float4x4 view_matrix;
float4x4 view_proj_matrix;
float4 lightDir;

struct VS_OUTPUT
{
   float4 Pos    : POSITION;
   float3 Tex    : TEXCOORD0;
   float  depth  : TEXCOORD1;
};
VS_OUTPUT main( 
   float4 inPos  : POSITION,
   float3 inNorm : NORMAL,
   float2 inTex  : TEXCOORD0 )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 

   float4 offsetPos = inPos;
   offsetPos.xyz *= 600.0;
   
   // Output transformed position:
   Out.Pos = mul( view_proj_matrix, offsetPos ); 

   // Compute position in view space:
   float3 Pview = mul( view_matrix, offsetPos ); 
   
   Out.Tex = inPos.xyz;

   Out.depth = Pview.z;

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="view_matrix" API="" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" API="" REGISTER="4"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="Stream Mapping" API=""/>
    </RmPass>
   </RmDirectXEffect>
   <RmRenderableTexture NAME="backbuffer" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Desktop\" WIDTH="512" HEIGHT="512" FORMAT="21" USE_VIEWPORT_DIMENSIONS="FALSE" GENERATE_MIPMAPS="FALSE"/>
   <RmRenderableTexture NAME="lowres" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Desktop\" WIDTH="128" HEIGHT="128" FORMAT="21" USE_VIEWPORT_DIMENSIONS="FALSE" GENERATE_MIPMAPS="FALSE"/>
   <RmRenderableTexture NAME="temp" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Desktop\" WIDTH="128" HEIGHT="128" FORMAT="21" USE_VIEWPORT_DIMENSIONS="FALSE" GENERATE_MIPMAPS="FALSE"/>
  </RmEffectGroup>
  <RmFloatVariable NAME="d_near" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="80.000000" MIN="0.000000" MAX="2000.000000" CLAMP="TRUE"/>
  <RmFloatVariable NAME="d_focus" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="360.000000" MIN="0.000000" MAX="2000.000000" CLAMP="TRUE"/>
  <RmFloatVariable NAME="d_far" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="1000.000000" MIN="0.000000" MAX="2000.000000" CLAMP="TRUE"/>
  <RmDynamicVariable NAME="screenRes" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" VARIABLE_TYPE="FLOAT" ROWS="2" COLUMNS="1" FIXED_SIZE="TRUE" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE">
   <RmDynamicVariableValueContainer>
    <RmDynamicVariableValue ROW_INDEX="0" COLUMN_INDEX="0" VALUE="512.000000"/>
    <RmDynamicVariableValue ROW_INDEX="1" COLUMN_INDEX="0" VALUE="512.000000"/>
   </RmDynamicVariableValueContainer>
  </RmDynamicVariable>
  <RmFloatVariable NAME="far_clamp" API="" ARTIST_EDITABLE="TRUE" VARIABLE_SEMANTIC="" VALUE="1.000000" MIN="0.000000" MAX="1.000000" CLAMP="TRUE"/>
  <Rm2DTextureVariable NAME="Teapot3Texture" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="NPR Metallic Outline.tga"/>
  <Rm2DTextureVariable NAME="Teapot1Texture" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Wood.dds"/>
  <Rm2DTextureVariable NAME="Teapot2Texture" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Fieldstone.tga"/>
  <RmCubemapVariable NAME="EnvironmentCube" API="" ARTIST_EDITABLE="FALSE" VARIABLE_SEMANTIC="" FILE_NAME="Snow.dds"/>
  <RmModelData NAME="Cube" API="" FILE_NAME=".\Cube.3ds"/>
  <RmModelData NAME="Teapot" API="" FILE_NAME=".\Teapot.3ds"/>
  <RmModelData NAME="ScreenAlignedQuad" API="" FILE_NAME=".\ScreenAlignedQuad.3ds"/>
 </RmEffectWorkspace>
</RENDER_MONKEY>
