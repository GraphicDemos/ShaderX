//------------------------------------------------------------------------------
//  pixel swapper v1
// register c5 indicates whether to take the left or the right pixel.
// history.
// version 1.0
// 2 textures.  2 samplers
// version 1.1
//  still 2 textures. use just 1 sampler .
//------------------------------------------------------------------------------

ps.2.0

    // c10-c17 - contain pixel offset constants passed in from app

    def c1, 2.0f, 2.0f, 2.0f, 2.0f
    def c2, 0.3f, 0.59, 0.11, 1.0f 
    def c3, 1.f, 1.f, 1.f, 1.f 
    def c4, 0.3333333333333333333f, 0.0, 1.0, 0.5


	// c5 detemines whether we sample right/left/down/up
	// 
	// c5 is one of (1,0), (-1,0), (0,1), (0,-1)


    dcl t0.xy
	dcl t1.xy
    dcl_2d s0

		// sample current
    texld r0,t0, s0

		// from c5 and t1, determine which texel to sample and potentially swap with.
		// t1.r is either -1 or +1.   t1.g is either -1 or +1
	texld r1,t1,s0
	mul r2, r1, c5
	
	mul r9, r2, c8	//scale to increment by a texel.
	
	add r8.xy, t0, r9
	texld r3, r8, s0
	
	// compare values using appropriate comp func and write new value to current pixel.
	// find difference in vals.
	sub r4, r0, r3
	mov r5.x, r2.y
	add r6.x, r2.x, r5.x	// either -1 or +1

	mul r7.x, r4, r6.x
	
	cmp r0, r7.x, r3, r0		// on right and down sieves, if Tex0 - Tex1 >0 then swap.
								// on left and down, if Tex0 - Tex1 <0 then swap.    
    mov oC0, r0

    

